{"ast":null,"code":"import { getUnvisitedNeighbors } from \"./algoHelper\";\nexport function bfs(grid, startNode, finishNode) {\n  const visitedNodesInOrder = [];\n  const queue = [];\n  queue.push(startNode);\n  while (!!queue.length) {\n    const currentNode = queue.shift();\n    if (currentNode.isWall) continue;\n    if (currentNode.isVisited) continue;\n    currentNode.isVisited = true;\n    visitedNodesInOrder.push(currentNode);\n    if (currentNode === finishNode) return visitedNodesInOrder;\n    const unvisitedNeighbors = getUnvisitedNeighbors(currentNode, grid);\n    for (const neighbor of unvisitedNeighbors) {\n      neighbor.distance = currentNode.distance + 1;\n      neighbor.previousNode = currentNode;\n      queue.push(neighbor);\n    }\n  }\n  return visitedNodesInOrder;\n}","map":{"version":3,"names":["getUnvisitedNeighbors","bfs","grid","startNode","finishNode","visitedNodesInOrder","queue","push","length","currentNode","shift","isWall","isVisited","unvisitedNeighbors","neighbor","distance","previousNode"],"sources":["D:/PR'S/pff/pathfinding-visualizer/src/algorithms/bfs.js"],"sourcesContent":["import { getUnvisitedNeighbors } from \"./algoHelper\";\r\n\r\nexport function bfs(grid, startNode, finishNode) {\r\n  const visitedNodesInOrder = [];\r\n  const queue = [];\r\n  queue.push(startNode);\r\n\r\n  while (!!queue.length) {\r\n    const currentNode = queue.shift();\r\n\r\n    if (currentNode.isWall) continue;\r\n    if (currentNode.isVisited) continue;\r\n    currentNode.isVisited = true;\r\n    visitedNodesInOrder.push(currentNode);\r\n\r\n    if (currentNode === finishNode) return visitedNodesInOrder;\r\n    const unvisitedNeighbors = getUnvisitedNeighbors(currentNode, grid);\r\n    for (const neighbor of unvisitedNeighbors) {\r\n      neighbor.distance = currentNode.distance + 1;\r\n      neighbor.previousNode = currentNode;\r\n      queue.push(neighbor);\r\n    }\r\n  }\r\n  return visitedNodesInOrder;\r\n}\r\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,cAAc;AAEpD,OAAO,SAASC,GAAGA,CAACC,IAAI,EAAEC,SAAS,EAAEC,UAAU,EAAE;EAC/C,MAAMC,mBAAmB,GAAG,EAAE;EAC9B,MAAMC,KAAK,GAAG,EAAE;EAChBA,KAAK,CAACC,IAAI,CAACJ,SAAS,CAAC;EAErB,OAAO,CAAC,CAACG,KAAK,CAACE,MAAM,EAAE;IACrB,MAAMC,WAAW,GAAGH,KAAK,CAACI,KAAK,CAAC,CAAC;IAEjC,IAAID,WAAW,CAACE,MAAM,EAAE;IACxB,IAAIF,WAAW,CAACG,SAAS,EAAE;IAC3BH,WAAW,CAACG,SAAS,GAAG,IAAI;IAC5BP,mBAAmB,CAACE,IAAI,CAACE,WAAW,CAAC;IAErC,IAAIA,WAAW,KAAKL,UAAU,EAAE,OAAOC,mBAAmB;IAC1D,MAAMQ,kBAAkB,GAAGb,qBAAqB,CAACS,WAAW,EAAEP,IAAI,CAAC;IACnE,KAAK,MAAMY,QAAQ,IAAID,kBAAkB,EAAE;MACzCC,QAAQ,CAACC,QAAQ,GAAGN,WAAW,CAACM,QAAQ,GAAG,CAAC;MAC5CD,QAAQ,CAACE,YAAY,GAAGP,WAAW;MACnCH,KAAK,CAACC,IAAI,CAACO,QAAQ,CAAC;IACtB;EACF;EACA,OAAOT,mBAAmB;AAC5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}