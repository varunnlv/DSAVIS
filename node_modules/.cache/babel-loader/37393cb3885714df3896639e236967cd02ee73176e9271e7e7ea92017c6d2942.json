{"ast":null,"code":"var _jsxFileName = \"D:\\\\PR'S\\\\pff\\\\pathfinding-visualizer\\\\src\\\\components\\\\BubbleSort.jsx\",\n  _s = $RefreshSig$();\n// PathfindingVisualizer.jsx\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./BubbleSort.css\";\nimport { executeAlgorithm } from \"../algorithms\";\nimport Toolbar from \"../utils/ToolBar\";\nimport { useVisualization } from \"../hooks/useVisualization\";\nimport { useMazeGenerator } from \"../hooks/useMazeGenerator\";\nimport { initialGrid, findStartNode, findFinishNode, initialGrid2 } from \"../utils/GridUtils\";\nimport { dijkstra } from \"../algorithms/dijkstra\";\nimport { dfs } from \"../algorithms/dfs\";\nimport { bfs } from \"../algorithms/bfs\";\nimport { astar } from \"../algorithms/astar\";\nimport { gbfs } from \"../algorithms/gbfs\";\nimport { bidirectional } from \"../algorithms/bidirectional\";\nimport * as d3 from \"d3\";\nimport Slider from \"react-slider\"; // Assuming react-slider for Slider components\nimport $ from 'jquery'; // Make sure jQuery is imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst algorithms = [{\n  label: \"Dijkstra\",\n  actionKey: \"dijkstra\",\n  func: dijkstra\n}, {\n  label: \"A*\",\n  actionKey: \"astar\",\n  func: astar\n}, {\n  label: \"Greedy Best First Search\",\n  actionKey: \"gbfs\",\n  func: gbfs\n}, {\n  label: \"Bidirectional Search\",\n  actionKey: \"bidirectional\",\n  func: bidirectional\n}, {\n  label: \"Breadth First Search\",\n  actionKey: \"bfs\",\n  func: bfs\n}, {\n  label: \"Depth First Search\",\n  actionKey: \"dfs\",\n  func: dfs\n}];\nconst mazeOptions = [{\n  label: \"Randomize Board\",\n  actionKey: \"randomizeBoard\"\n}, {\n  label: \"Recursive Division Maze\",\n  actionKey: \"generateRecursiveDivisionMaze\"\n}];\nconst BubbleSort = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [comparisons, setComparisons] = useState(0);\n  const [swaps, setSwaps] = useState(0);\n  const [delay, setDelay] = useState(200);\n  const visuRef = useRef(null);\n  const screenWidth = window.screen.availWidth;\n  const screenHeight = 370;\n  const barPadding = 5;\n  const generateBlocks = dataset => {\n    // Clear previous blocks before generating new ones\n    clearBlocks();\n    const totalPadding = barPadding * (dataset.length - 1); // Total padding across all bars\n    const barWidth = (screenWidth - totalPadding) / dataset.length; // Adjust bar width based on available width and padding\n\n    const xScale = d3.scaleLinear().domain([0, dataset.length]).range([0, screenWidth]);\n\n    // Join the data with existing rect elements\n    const bars = d3.select(visuRef.current).selectAll(\"rect\").data(dataset).join(enter => enter.append(\"rect\"),\n    // For new data points\n    update => update,\n    // For existing data points\n    exit => exit.remove() // Remove old data points\n    ).attr(\"transform\", (d, i) => `translate(${xScale(i)},0)`).attr(\"y\", d => screenHeight - d * 3).attr(\"width\", barWidth) // Dynamically calculated width\n    .attr(\"height\", d => d * 3).attr(\"fill\", \"#CC1616\");\n\n    // Join the data with existing text elements (labels)\n    const labels = d3.select(visuRef.current).selectAll(\"text\").data(dataset).join(enter => enter.append(\"text\"),\n    // For new data points\n    update => update,\n    // For existing data points\n    exit => exit.remove() // Remove old data points\n    ).text(d => d).attr(\"x\", (d, i) => xScale(i) + barWidth / 2) // Center the label\n    .attr(\"y\", d => screenHeight - d * 3 - 5).attr(\"font-family\", \"sans-serif\").attr(\"font-size\", \"14px\").attr(\"fill\", \"black\").attr(\"text-anchor\", \"middle\");\n  };\n\n  // Clears the D3 blocks\n  const clearBlocks = () => {\n    d3.select(visuRef.current).selectAll(\"rect\").remove();\n    d3.select(visuRef.current).selectAll(\"text\").remove();\n  };\n\n  // Function to create a new data set and trigger redraw\n  const newSet = (num = 20) => {\n    const newData = Array.from({\n      length: num\n    }, () => Math.floor(Math.random() * 119) + 1);\n    setData(newData);\n    generateBlocks(newData); // Regenerate blocks based on new data\n  };\n\n  // React useEffect to handle initial rendering\n  useEffect(() => {\n    d3.select(visuRef.current).attr(\"width\", \"100%\").attr(\"height\", screenHeight).attr(\"viewBox\", `0 0 ${screenWidth} ${screenHeight}`);\n\n    // Initial setup for blocks\n    newSet(15);\n\n    // Cleanup function on unmount\n    return () => {\n      clearBlocks();\n    };\n  }, []);\n  const DELAY = 500;\n\n  // const bubbleSort = async () => {\n  //   setComparisons(0);\n  //   setSwaps(0);\n  //   let swapped;\n\n  //   for (let i = 0; i < data.length - 1; i++) {\n  //     swapped = false;\n  //     for (let j = 0; j < data.length - i - 1; j++) {\n  //       const value1 = data[j];\n  //       const value2 = data[j + 1];\n\n  //       // Highlight compared bars\n  //       d3.select(`rect:nth-child(${j + 1})`).attr(\"fill\", \"black\");\n  //       d3.select(`rect:nth-child(${j + 2})`).attr(\"fill\", \"black\");\n\n  //       setComparisons((prev) => prev + 1);\n\n  //       // Adding a delay to allow the user to see the comparisons\n  //       await new Promise(resolve => setTimeout(resolve, delay));\n\n  //       if (value1 > value2) {\n  //         // Swap values\n  //         let temp = [...data];\n  //         temp[j] = value2;\n  //         temp[j + 1] = value1;\n  //         setData(temp); // Update the state to trigger a re-render\n\n  //         // Increment swap count\n  //         setSwaps((prev) => prev + 1);\n\n  //         await moveBars(j, j + 1);\n  //         console.log(\"values\", j , j+1);\n  //         swapped = true;\n  //         // Allow some time to see the swap effect\n  //         await new Promise(resolve => setTimeout(resolve, delay));\n  //       }else {\n  //         await new Promise((resolve) =>\n  //           setTimeout(() => {\n  //             resolve();\n  //           }, DELAY)\n  //         );\n  //       }\n\n  //       // Reset color of bars\n  //       d3.select(`rect:nth-child(${j + 1})`).attr(\"fill\", \"#CC1616\");\n  //       d3.select(`rect:nth-child(${j + 2})`).attr(\"fill\", \"#CC1616\");\n  //     }\n\n  //     if (!swapped) {\n  //       break; // No swaps means the array is sorted\n  //     }\n  //   }\n  // };\n\n  // // Function to move the bars visually during a swap\n  // const moveBars = async (index1, index2) => {\n  //   const xScale = d3.scaleLinear().domain([0, data.length]).range([0, screenWidth]);\n\n  //   // Get the current positions of the rectangles\n  //   const rect1 = d3.select(`#rect${index1}`);\n  //   const rect2 = d3.select(`#rect${index2}`);\n\n  //   const rect1X = xScale(index1);\n  //   const rect2X = xScale(index2);\n\n  //   // Animate the movement of both rectangles\n  //   await Promise.all([\n  //     rect1.transition()\n  //       .duration(delay)\n  //       .attr(\"transform\", `translate(${rect2X - rect1X},0)`),\n\n  //     rect2.transition()\n  //       .duration(delay)\n  //       .attr(\"transform\", `translate(${rect1X - rect2X},0)`),\n  //   ]);\n\n  //   // Reset transforms after the animation\n  //   rect1.attr(\"transform\", `translate(0,0)`);\n  //   rect2.attr(\"transform\", `translate(0,0)`);\n  // };\n\n  //   const bubbleSort = async () => {\n  //   setComparisons(0);\n  //   setSwaps(0);\n  //   let swapped;\n\n  //   for (let i = 0; i < data.length - 1; i++) {\n  //     swapped = false;\n  //     for (let j = 0; j < data.length - i - 1; j++) {\n  //       const value1 = data[j];\n  //       const value2 = data[j + 1];\n\n  //       // Highlight compared bars\n  //       highlightBars(j, j + 1);\n  //       setComparisons((prev) => prev + 1);\n  //       await new Promise((resolve) => setTimeout(resolve, 200)); // Add delay for highlighting effect\n\n  //       if (value1 > value2) {\n  //         // Swap values\n  //         let temp = [...data];\n  //         temp[j] = value2;\n  //         temp[j + 1] = value1;\n\n  //         // Update the state and animate the blocks\n  //         setData(temp);\n  //         await animateSwap(j, j + 1);\n  //         setSwaps((prev) => prev + 1);\n  //         swapped = true;\n  //       }\n\n  //       // Reset color of bars\n  //       resetHighlight(j, j + 1);\n  //     }\n\n  //     if (!swapped) {\n  //       break;\n  //     }\n  //   }\n  // };\n\n  const bubbleSort = async () => {\n    setComparisons(0);\n    setSwaps(0);\n    let swapped = true; // Initialize swapped to true to enter the loop\n    let n = data.length; // Size of the list to sort\n    let tempData = [...data]; // Use a local copy for immediate data manipulation\n\n    while (swapped) {\n      swapped = false;\n      for (let i = 0; i < n - 1; i++) {\n        const value1 = tempData[i];\n        const value2 = tempData[i + 1];\n\n        // Highlight compared bars\n        highlightBars(i, i + 1);\n        setComparisons(prev => prev + 1);\n        await new Promise(resolve => setTimeout(resolve, 200)); // Add delay for highlighting effect\n\n        if (value1 > value2) {\n          // Animate the blocks before the swap\n          await animateSwap(i, i + 1, tempData);\n\n          // Swap values in the local tempData array\n          let temp = tempData[i];\n          tempData[i] = tempData[i + 1];\n          tempData[i + 1] = temp;\n\n          // After swapping, animate the updated positions\n          await animateSwap(i, i + 1, tempData);\n          setSwaps(prev => prev + 1);\n          swapped = true; // Indicate that a swap occurred\n        }\n\n        // Reset color of bars after comparison\n        resetHighlight(i, i + 1);\n      }\n\n      // Reduce the range for the next pass, since the largest element is already sorted\n      n--;\n    }\n\n    // After sorting, update the data state with the sorted array\n    setData(tempData);\n  };\n\n  // Animate swapping of blocks\n  const animateSwap = async (index1, index2, currentData) => {\n    const barWidth = screenWidth / currentData.length - barPadding;\n    const xScale = d3.scaleLinear().domain([0, currentData.length]).range([0, screenWidth]);\n\n    // Calculate new positions based on the updated data\n    const pos1 = xScale(index1);\n    const pos2 = xScale(index2);\n\n    // Animate moving the rectangles and text labels\n    await new Promise(resolve => {\n      const rects = d3.select(visuRef.current).selectAll(\"rect\");\n      const texts = d3.select(visuRef.current).selectAll(\"text\");\n\n      // Animate the first rectangle to the second position\n      rects.filter((d, i) => i === index1).transition().duration(200).attr(\"transform\", `translate(${pos2},0)`).on(\"end\", () => {\n        // Animate the second rectangle to the first position\n        rects.filter((d, i) => i === index2).transition().duration(200).attr(\"transform\", `translate(${pos1},0)`).on(\"end\", resolve);\n      });\n\n      // Animate the text for the first index\n      texts.filter((d, i) => i === index1).transition().duration(200) // Adjust duration as needed\n      .attr(\"x\", pos2 + barWidth / 2).on(\"end\", () => {\n        // Animate the second label to the first position\n        texts.filter((d, i) => i === index2).transition().duration(200).attr(\"x\", pos1 + barWidth / 2).on(\"end\", resolve);\n      });\n    });\n  };\n\n  // Function to highlight bars during comparison\n  const highlightBars = (index1, index2) => {\n    d3.select(visuRef.current).select(`rect:nth-child(${index1 + 1})`).attr(\"fill\", \"#9DBDC6\");\n    d3.select(visuRef.current).select(`rect:nth-child(${index2 + 1})`).attr(\"fill\", \"#9DBDC6\");\n  };\n\n  // Function to reset the highlight of bars\n  const resetHighlight = (index1, index2) => {\n    d3.select(visuRef.current).select(`rect:nth-child(${index1 + 1})`).attr(\"fill\", \"#CC1616\");\n    d3.select(visuRef.current).select(`rect:nth-child(${index2 + 1})`).attr(\"fill\", \"#CC1616\");\n  };\n\n  // Animate swapping of blocks\n  // const animateSwap = async (index1, index2) => {\n  //   const barWidth = screenWidth / data.length - barPadding;\n  //   const xScale = d3.scaleLinear().domain([0, data.length]).range([0, screenWidth]);\n\n  //   // Get the current positions\n  //   const pos1 = xScale(index1);\n  //   const pos2 = xScale(index2);\n\n  //   console.log(pos1,pos2);\n\n  //   // Animate moving the rectangles\n  //   await new Promise((resolve) => {\n  //     // d3.select(visuRef.current)\n  //     //   .select(`rect:nth-child(${index1 + 1})`)\n  //     //   .transition()\n  //     //   .duration(200) // Adjust duration as needed\n  //     //   .attr(\"transform\", `translate(${pos2},0)`)\n  //     //   .on(\"end\", () => {\n  //     //     d3.select(visuRef.current)\n  //     //       .select(`rect:nth-child(${index2 + 1})`)\n  //     //       .transition()\n  //     //       .duration(200)\n  //     //       .attr(\"transform\", `translate(${pos1},0)`)\n  //     //       .on(\"end\", resolve);\n  //     // });\n\n  //     // d3.select(visuRef.current)\n  //     //   .select(`text:nth-child(${index1 + 1})`)\n  //     //   .transition()\n  //     //   .duration(200) // Adjust duration as needed\n  //     //   .attr(\"transform\", `translate(${pos2},0)`)\n  //     //   .on(\"end\", () => {\n  //     //     d3.select(visuRef.current)\n  //     //       .select(`text:nth-child(${index2 + 1})`)\n  //     //       .transition()\n  //     //       .duration(200)\n  //     //       .attr(\"transform\", `translate(${pos1},0)`)\n  //     //       .on(\"end\", resolve);\n  //     // });\n\n  //     const rects = d3.select(visuRef.current).selectAll(\"rect\");\n  //     const texts = d3.select(visuRef.current).selectAll(\"text\");\n\n  //     console.log(texts);\n\n  //     // Animate the first rectangle to the second position\n  //     rects.filter((d, i) => i === index1)\n  //       .transition()\n  //       .duration(200) // Adjust duration as needed\n  //       .attr(\"transform\", `translate(${pos2},0)`)\n  //       .on(\"end\", () => {\n  //         // Animate the second rectangle to the first position\n  //         rects.filter((d, i) => i === index2)\n  //           .transition()\n  //           .duration(200)\n  //           .attr(\"transform\", `translate(${pos1},0)`)\n  //           .on(\"end\", resolve);\n  //       });\n\n  //     // Animate the text for the first index\n  //     texts.filter((d, i) => i === index1)\n  //     .transition()\n  //     .duration(200) // Adjust duration as needed\n  //     .attr(\"x\", pos2 + barWidth / 2)\n  //     .on(\"end\", () => {\n  //       // Animate the second label to the first position\n  //       texts.filter((d, i) => i === index2)\n  //         .transition()\n  //         .duration(200)\n  //         .attr(\"x\", pos1 + barWidth / 2)\n  //         .on(\"end\", resolve);\n  //     });\n\n  //   });\n\n  // };\n\n  const [grid, setGrid] = useState(initialGrid());\n  const {\n    visualize,\n    clearBoard,\n    resetForVisualization,\n    resetForMaze\n  } = useVisualization(grid, setGrid);\n  const {\n    randomizeBoard,\n    generateWeightedMaze,\n    generateRecursiveDivisionMaze\n  } = useMazeGenerator(grid, setGrid);\n  const [ispathfinderEnabled, setpathfinderEnabled] = useState(false);\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState(algorithms[0]); // Default to Dijkstra object\n\n  const handleToolbarAction = actionKey => {\n    switch (actionKey) {\n      case \"clearBoard\":\n        clearBoard();\n        break;\n      case \"clearPath\":\n        resetForVisualization();\n        break;\n      case \"randomizeBoard\":\n        resetForMaze();\n        randomizeBoard(); // Assuming this generates a random maze\n        break;\n      case \"generateRecursiveDivisionMaze\":\n        resetForMaze();\n        generateRecursiveDivisionMaze();\n        break;\n      case \"generateWeightedMaze\":\n        resetForMaze();\n        generateWeightedMaze();\n        break;\n      case \"visualize\":\n        resetForVisualization();\n        startVisualization(selectedAlgorithm.actionKey);\n        break;\n      default:\n        if (actionKey.startsWith(\"algo-\")) {\n          const algorithmKey = actionKey.replace(\"algo-\", \"\");\n          const selected = algorithms.find(algo => algo.actionKey === algorithmKey);\n          if (selected) {\n            setSelectedAlgorithm(selected);\n          }\n        }\n        break;\n    }\n  };\n  const startVisualization = () => {\n    const startNode = findStartNode(grid);\n    const finishNode = findFinishNode(grid);\n    const algorithmFunc = selectedAlgorithm.func;\n    if (!algorithmFunc) {\n      console.error(`Algorithm function not found.`);\n      return;\n    }\n    const result = executeAlgorithm(algorithmFunc, grid, startNode, finishNode);\n    if (!result || !result.visitedNodesInOrder || !result.nodesInShortestPathOrder) {\n      console.error(\"Algorithm did not return expected result.\");\n      return; // Exit to avoid calling visualize with undefined values\n    }\n    visualize(result.visitedNodesInOrder, result.nodesInShortestPathOrder);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      onAction: handleToolbarAction,\n      selectedAlgorithm: selectedAlgorithm.label,\n      algorithmItems: algorithms.map(algo => ({\n        label: algo.label,\n        actionKey: `algo-${algo.actionKey}`\n      })),\n      mazeItems: mazeOptions // Pass the maze options here\n      ,\n      ispathfinderEnabled: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"inner-page pt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid px-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"row mx-auto px-0 w-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-weight-bold\",\n              children: \"No. of comparisons: 0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-weight-bold\",\n              children: \"No. of swaps: 0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-container px-1 mb-0 mt-0 w-100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n            ref: visuRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-12 col-md-12 col-lg-6 px-0 mr-0\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ide w-100\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row ml-auto mr-auto 1\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"op\",\n                    children: \"while\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 570,\n                    columnNumber: 21\n                  }, this), \"(swapped)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row ml-auto mr-auto mt-1 2\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"\\u2003\\u2003swapped = \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"var\",\n                    children: \"false\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 574,\n                    columnNumber: 47\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row ml-auto mr-auto mt-1 3\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"\\u2003\\u2003\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"op\",\n                    children: \"for\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 578,\n                    columnNumber: 33\n                  }, this), \" x = 0 to length(list)-1\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row ml-auto mr-auto mt-1 4\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"\\u2003\\u2003\\u2003\\u2003\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"op\",\n                    children: \"if\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 45\n                  }, this), \" list[x] > list[x+1]\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row ml-auto mr-auto mt-1 5\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"\\u2003\\u2003\\u2003\\u2003\\u2003\\u2003\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"op\",\n                    children: \"swap\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 588,\n                    columnNumber: 57\n                  }, this), \"(list[x], list[x+1])\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row ml-auto mr-auto mt-1 6\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"\\u2003\\u2003\\u2003\\u2003\\u2003\\u2003swapped = \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"var\",\n                    children: \"true\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 593,\n                    columnNumber: 67\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-12 col-md-12 col-lg-6 ml-0 px-0\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ide w-100 pl-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row ml-auto mr-auto\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"comment\",\n                  children: \"SHORT EXPLANATION\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row ml-auto mr-auto mt-1\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"comment\",\n                  children: \"------------------\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row ml-auto mr-auto mt-1\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"comment\",\n                  children: \"1. Starting at index 0, compare the current element with the next element\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row ml-auto mr-auto mt-1\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"comment\",\n                  children: \"- If the current element is greater than the next element, swap them\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row ml-auto mr-auto mt-1\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"comment\",\n                  children: \"- If the current element is less than the next element, move to the next element\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row ml-auto mr-auto mt-1\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"comment\",\n                  children: \"2. Repeat Step 1 until the list is sorted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scrollers\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scrollers1\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Elements: \", data.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              min: 5,\n              max: 50,\n              step: 1,\n              value: data.length,\n              onChange: value => newSet(value),\n              handle: ({\n                value\n              }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 40\n              }, this) // Optional custom handle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scrollers1\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Speed: \", delay, \" ms\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              min: 10,\n              max: 1000,\n              step: 10,\n              value: delay,\n              onChange: value => setDelay(value),\n              handle: ({\n                value\n              }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 40\n              }, this) // Optional custom handle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-12 col-md-12 col-lg-6\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-3\",\n                  children: \"Data Generation\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 661,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-9\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-check\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"own-data\",\n                      className: \"form-check-input\",\n                      type: \"checkbox\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 664,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-check-label\",\n                      htmlFor: \"own-data\",\n                      children: \"Use own data\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 669,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 663,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-12 col-md-12 col-lg-6\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group row\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"data-input\",\n                  className: \"col-sm-5 col-form-label\",\n                  children: \"Your data (max. 50 elements):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 680,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-7\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    disabled: true,\n                    type: \"text\",\n                    className: \"form-control\",\n                    id: \"data-input\",\n                    placeholder: \"10,42,34,55,...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 684,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 683,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"sort-button\",\n              type: \"button\",\n              onClick: bubbleSort,\n              className: \"btn btn-danger red w-100\",\n              children: \"Sort\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 527,\n    columnNumber: 5\n  }, this);\n};\n_s(BubbleSort, \"XAXfazLFNcKlNdWFu39b7jFIeXg=\", false, function () {\n  return [useVisualization, useMazeGenerator];\n});\n_c = BubbleSort;\nexport default BubbleSort;\nvar _c;\n$RefreshReg$(_c, \"BubbleSort\");","map":{"version":3,"names":["React","useEffect","useState","useRef","executeAlgorithm","Toolbar","useVisualization","useMazeGenerator","initialGrid","findStartNode","findFinishNode","initialGrid2","dijkstra","dfs","bfs","astar","gbfs","bidirectional","d3","Slider","$","jsxDEV","_jsxDEV","algorithms","label","actionKey","func","mazeOptions","BubbleSort","_s","data","setData","comparisons","setComparisons","swaps","setSwaps","delay","setDelay","visuRef","screenWidth","window","screen","availWidth","screenHeight","barPadding","generateBlocks","dataset","clearBlocks","totalPadding","length","barWidth","xScale","scaleLinear","domain","range","bars","select","current","selectAll","join","enter","append","update","exit","remove","attr","d","i","labels","text","newSet","num","newData","Array","from","Math","floor","random","DELAY","bubbleSort","swapped","n","tempData","value1","value2","highlightBars","prev","Promise","resolve","setTimeout","animateSwap","temp","resetHighlight","index1","index2","currentData","pos1","pos2","rects","texts","filter","transition","duration","on","grid","setGrid","visualize","clearBoard","resetForVisualization","resetForMaze","randomizeBoard","generateWeightedMaze","generateRecursiveDivisionMaze","ispathfinderEnabled","setpathfinderEnabled","selectedAlgorithm","setSelectedAlgorithm","handleToolbarAction","startVisualization","startsWith","algorithmKey","replace","selected","find","algo","startNode","finishNode","algorithmFunc","console","error","result","visitedNodesInOrder","nodesInShortestPathOrder","className","children","onAction","algorithmItems","map","mazeItems","fileName","_jsxFileName","lineNumber","columnNumber","ref","min","max","step","value","onChange","handle","id","type","htmlFor","disabled","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/PR'S/pff/pathfinding-visualizer/src/components/BubbleSort.jsx"],"sourcesContent":["// PathfindingVisualizer.jsx\r\nimport React, { useEffect,useState, useRef } from \"react\";\r\nimport \"./BubbleSort.css\";\r\nimport { executeAlgorithm } from \"../algorithms\";\r\nimport Toolbar from \"../utils/ToolBar\";\r\nimport { useVisualization } from \"../hooks/useVisualization\";\r\nimport { useMazeGenerator } from \"../hooks/useMazeGenerator\";\r\nimport { initialGrid, findStartNode, findFinishNode, initialGrid2 } from \"../utils/GridUtils\";\r\nimport { dijkstra } from \"../algorithms/dijkstra\";\r\nimport { dfs } from \"../algorithms/dfs\";\r\nimport { bfs } from \"../algorithms/bfs\";\r\nimport { astar } from \"../algorithms/astar\";\r\nimport { gbfs } from \"../algorithms/gbfs\";\r\nimport { bidirectional } from \"../algorithms/bidirectional\";\r\nimport * as d3 from \"d3\";\r\nimport Slider from \"react-slider\"; // Assuming react-slider for Slider components\r\nimport $ from 'jquery'; // Make sure jQuery is imported\r\n\r\n\r\n\r\nconst algorithms = [\r\n  { label: \"Dijkstra\", actionKey: \"dijkstra\", func: dijkstra },\r\n  { label: \"A*\", actionKey: \"astar\", func: astar },\r\n  { label: \"Greedy Best First Search\", actionKey: \"gbfs\", func: gbfs },\r\n  {\r\n    label: \"Bidirectional Search\",\r\n    actionKey: \"bidirectional\",\r\n    func: bidirectional,\r\n  },\r\n  { label: \"Breadth First Search\", actionKey: \"bfs\", func: bfs },\r\n  { label: \"Depth First Search\", actionKey: \"dfs\", func: dfs },\r\n];\r\n\r\nconst mazeOptions = [\r\n  { label: \"Randomize Board\", actionKey: \"randomizeBoard\" },\r\n  {\r\n    label: \"Recursive Division Maze\",\r\n    actionKey: \"generateRecursiveDivisionMaze\",\r\n  },\r\n];\r\n\r\n\r\nconst BubbleSort = () => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [comparisons, setComparisons] = useState(0);\r\n  const [swaps, setSwaps] = useState(0);\r\n  const [delay, setDelay] = useState(200);\r\n  const visuRef = useRef(null);\r\n  const screenWidth = window.screen.availWidth;\r\n  const screenHeight = 370;\r\n  const barPadding = 5;\r\n\r\n\r\n\r\n  const generateBlocks = (dataset) => {\r\n    // Clear previous blocks before generating new ones\r\n    clearBlocks();\r\n\r\n    const totalPadding = barPadding * (dataset.length - 1); // Total padding across all bars\r\n    const barWidth = (screenWidth - totalPadding) / dataset.length; // Adjust bar width based on available width and padding\r\n\r\n    const xScale = d3.scaleLinear()\r\n      .domain([0, dataset.length])\r\n      .range([0, screenWidth]);\r\n\r\n    // Join the data with existing rect elements\r\n    const bars = d3.select(visuRef.current)\r\n      .selectAll(\"rect\")\r\n      .data(dataset)\r\n      .join(\r\n        enter => enter.append(\"rect\"), // For new data points\r\n        update => update, // For existing data points\r\n        exit => exit.remove() // Remove old data points\r\n      )\r\n      .attr(\"transform\", (d, i) => `translate(${xScale(i)},0)`)\r\n      .attr(\"y\", (d) => screenHeight - d * 3)\r\n      .attr(\"width\", barWidth) // Dynamically calculated width\r\n      .attr(\"height\", (d) => d * 3)\r\n      .attr(\"fill\", \"#CC1616\");\r\n\r\n    // Join the data with existing text elements (labels)\r\n    const labels = d3.select(visuRef.current)\r\n      .selectAll(\"text\")\r\n      .data(dataset)\r\n      .join(\r\n        enter => enter.append(\"text\"), // For new data points\r\n        update => update, // For existing data points\r\n        exit => exit.remove() // Remove old data points\r\n      )\r\n      .text((d) => d)\r\n      .attr(\"x\", (d, i) => xScale(i) + barWidth / 2) // Center the label\r\n      .attr(\"y\", (d) => screenHeight - d * 3 - 5)\r\n      .attr(\"font-family\", \"sans-serif\")\r\n      .attr(\"font-size\", \"14px\")\r\n      .attr(\"fill\", \"black\")\r\n      .attr(\"text-anchor\", \"middle\");\r\n  };\r\n\r\n  // Clears the D3 blocks\r\n  const clearBlocks = () => {\r\n    d3.select(visuRef.current).selectAll(\"rect\").remove();\r\n    d3.select(visuRef.current).selectAll(\"text\").remove();\r\n  };\r\n\r\n  // Function to create a new data set and trigger redraw\r\n  const newSet = (num = 20) => {\r\n    const newData = Array.from({ length: num }, () => Math.floor(Math.random() * 119) + 1);\r\n    setData(newData);\r\n    generateBlocks(newData); // Regenerate blocks based on new data\r\n  };\r\n\r\n  // React useEffect to handle initial rendering\r\n  useEffect(() => {\r\n    d3.select(visuRef.current)\r\n      .attr(\"width\", \"100%\")\r\n      .attr(\"height\", screenHeight)\r\n      .attr(\"viewBox\", `0 0 ${screenWidth} ${screenHeight}`);\r\n\r\n    // Initial setup for blocks\r\n    newSet(15);\r\n\r\n    // Cleanup function on unmount\r\n    return () => {\r\n      clearBlocks();\r\n    };\r\n  }, []);\r\n\r\n\r\n  const DELAY = 500;\r\n    \r\n  // const bubbleSort = async () => {\r\n  //   setComparisons(0);\r\n  //   setSwaps(0);\r\n  //   let swapped;\r\n\r\n  //   for (let i = 0; i < data.length - 1; i++) {\r\n  //     swapped = false;\r\n  //     for (let j = 0; j < data.length - i - 1; j++) {\r\n  //       const value1 = data[j];\r\n  //       const value2 = data[j + 1];\r\n\r\n  //       // Highlight compared bars\r\n  //       d3.select(`rect:nth-child(${j + 1})`).attr(\"fill\", \"black\");\r\n  //       d3.select(`rect:nth-child(${j + 2})`).attr(\"fill\", \"black\");\r\n\r\n  //       setComparisons((prev) => prev + 1);\r\n\r\n  //       // Adding a delay to allow the user to see the comparisons\r\n  //       await new Promise(resolve => setTimeout(resolve, delay));\r\n\r\n  //       if (value1 > value2) {\r\n  //         // Swap values\r\n  //         let temp = [...data];\r\n  //         temp[j] = value2;\r\n  //         temp[j + 1] = value1;\r\n  //         setData(temp); // Update the state to trigger a re-render\r\n\r\n  //         // Increment swap count\r\n  //         setSwaps((prev) => prev + 1);\r\n      \r\n  //         await moveBars(j, j + 1);\r\n  //         console.log(\"values\", j , j+1);\r\n  //         swapped = true;\r\n  //         // Allow some time to see the swap effect\r\n  //         await new Promise(resolve => setTimeout(resolve, delay));\r\n  //       }else {\r\n  //         await new Promise((resolve) =>\r\n  //           setTimeout(() => {\r\n  //             resolve();\r\n  //           }, DELAY)\r\n  //         );\r\n  //       }\r\n\r\n  //       // Reset color of bars\r\n  //       d3.select(`rect:nth-child(${j + 1})`).attr(\"fill\", \"#CC1616\");\r\n  //       d3.select(`rect:nth-child(${j + 2})`).attr(\"fill\", \"#CC1616\");\r\n  //     }\r\n\r\n  //     if (!swapped) {\r\n  //       break; // No swaps means the array is sorted\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  // // Function to move the bars visually during a swap\r\n  // const moveBars = async (index1, index2) => {\r\n  //   const xScale = d3.scaleLinear().domain([0, data.length]).range([0, screenWidth]);\r\n  \r\n  //   // Get the current positions of the rectangles\r\n  //   const rect1 = d3.select(`#rect${index1}`);\r\n  //   const rect2 = d3.select(`#rect${index2}`);\r\n  \r\n  //   const rect1X = xScale(index1);\r\n  //   const rect2X = xScale(index2);\r\n  \r\n  //   // Animate the movement of both rectangles\r\n  //   await Promise.all([\r\n  //     rect1.transition()\r\n  //       .duration(delay)\r\n  //       .attr(\"transform\", `translate(${rect2X - rect1X},0)`),\r\n        \r\n  //     rect2.transition()\r\n  //       .duration(delay)\r\n  //       .attr(\"transform\", `translate(${rect1X - rect2X},0)`),\r\n  //   ]);\r\n  \r\n  //   // Reset transforms after the animation\r\n  //   rect1.attr(\"transform\", `translate(0,0)`);\r\n  //   rect2.attr(\"transform\", `translate(0,0)`);\r\n  // };\r\n  \r\n\r\n//   const bubbleSort = async () => {\r\n//   setComparisons(0);\r\n//   setSwaps(0);\r\n//   let swapped;\r\n\r\n//   for (let i = 0; i < data.length - 1; i++) {\r\n//     swapped = false;\r\n//     for (let j = 0; j < data.length - i - 1; j++) {\r\n//       const value1 = data[j];\r\n//       const value2 = data[j + 1];\r\n\r\n//       // Highlight compared bars\r\n//       highlightBars(j, j + 1);\r\n//       setComparisons((prev) => prev + 1);\r\n//       await new Promise((resolve) => setTimeout(resolve, 200)); // Add delay for highlighting effect\r\n\r\n//       if (value1 > value2) {\r\n//         // Swap values\r\n//         let temp = [...data];\r\n//         temp[j] = value2;\r\n//         temp[j + 1] = value1;\r\n\r\n//         // Update the state and animate the blocks\r\n//         setData(temp);\r\n//         await animateSwap(j, j + 1);\r\n//         setSwaps((prev) => prev + 1);\r\n//         swapped = true;\r\n//       }\r\n\r\n//       // Reset color of bars\r\n//       resetHighlight(j, j + 1);\r\n//     }\r\n\r\n//     if (!swapped) {\r\n//       break;\r\n//     }\r\n//   }\r\n// };\r\n\r\nconst bubbleSort = async () => {\r\n  setComparisons(0);\r\n  setSwaps(0);\r\n  let swapped = true; // Initialize swapped to true to enter the loop\r\n  let n = data.length; // Size of the list to sort\r\n  let tempData = [...data]; // Use a local copy for immediate data manipulation\r\n\r\n  while (swapped) {\r\n    swapped = false;\r\n\r\n    for (let i = 0; i < n - 1; i++) {\r\n      const value1 = tempData[i];\r\n      const value2 = tempData[i + 1];\r\n\r\n      // Highlight compared bars\r\n      highlightBars(i, i + 1);\r\n      setComparisons((prev) => prev + 1);\r\n      await new Promise((resolve) => setTimeout(resolve, 200)); // Add delay for highlighting effect\r\n\r\n      if (value1 > value2) {\r\n        // Animate the blocks before the swap\r\n        await animateSwap(i, i + 1, tempData);\r\n\r\n        // Swap values in the local tempData array\r\n        let temp = tempData[i];\r\n        tempData[i] = tempData[i + 1];\r\n        tempData[i + 1] = temp;\r\n\r\n        // After swapping, animate the updated positions\r\n        await animateSwap(i, i + 1, tempData);\r\n        \r\n        setSwaps((prev) => prev + 1);\r\n        swapped = true; // Indicate that a swap occurred\r\n      }\r\n\r\n      // Reset color of bars after comparison\r\n      resetHighlight(i, i + 1);\r\n    }\r\n\r\n    // Reduce the range for the next pass, since the largest element is already sorted\r\n    n--;\r\n  }\r\n\r\n  // After sorting, update the data state with the sorted array\r\n  setData(tempData);\r\n};\r\n\r\n// Animate swapping of blocks\r\nconst animateSwap = async (index1, index2, currentData) => {\r\n  const barWidth = screenWidth / currentData.length - barPadding;\r\n  const xScale = d3.scaleLinear().domain([0, currentData.length]).range([0, screenWidth]);\r\n\r\n  // Calculate new positions based on the updated data\r\n  const pos1 = xScale(index1);\r\n  const pos2 = xScale(index2);\r\n\r\n  // Animate moving the rectangles and text labels\r\n  await new Promise((resolve) => {\r\n    const rects = d3.select(visuRef.current).selectAll(\"rect\");\r\n    const texts = d3.select(visuRef.current).selectAll(\"text\");\r\n\r\n    // Animate the first rectangle to the second position\r\n    rects.filter((d, i) => i === index1)\r\n      .transition()\r\n      .duration(200)\r\n      .attr(\"transform\", `translate(${pos2},0)`)\r\n      .on(\"end\", () => {\r\n        // Animate the second rectangle to the first position\r\n        rects.filter((d, i) => i === index2)\r\n          .transition()\r\n          .duration(200)\r\n          .attr(\"transform\", `translate(${pos1},0)`)\r\n          .on(\"end\", resolve);\r\n      });\r\n\r\n    // Animate the text for the first index\r\n    texts.filter((d, i) => i === index1)\r\n      .transition()\r\n      .duration(200) // Adjust duration as needed\r\n      .attr(\"x\", pos2 + barWidth / 2)\r\n      .on(\"end\", () => {\r\n        // Animate the second label to the first position\r\n        texts.filter((d, i) => i === index2)\r\n          .transition()\r\n          .duration(200)\r\n          .attr(\"x\", pos1 + barWidth / 2)\r\n          .on(\"end\", resolve);\r\n      });\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\n// Function to highlight bars during comparison\r\nconst highlightBars = (index1, index2) => {\r\n  d3.select(visuRef.current)\r\n    .select(`rect:nth-child(${index1 + 1})`).attr(\"fill\", \"#9DBDC6\");\r\n  d3.select(visuRef.current)\r\n    .select(`rect:nth-child(${index2 + 1})`).attr(\"fill\", \"#9DBDC6\");\r\n};\r\n\r\n// Function to reset the highlight of bars\r\nconst resetHighlight = (index1, index2) => {\r\n  d3.select(visuRef.current)\r\n    .select(`rect:nth-child(${index1 + 1})`).attr(\"fill\", \"#CC1616\");\r\n  d3.select(visuRef.current)\r\n    .select(`rect:nth-child(${index2 + 1})`).attr(\"fill\", \"#CC1616\");\r\n};\r\n\r\n// Animate swapping of blocks\r\n// const animateSwap = async (index1, index2) => {\r\n//   const barWidth = screenWidth / data.length - barPadding;\r\n//   const xScale = d3.scaleLinear().domain([0, data.length]).range([0, screenWidth]);\r\n\r\n//   // Get the current positions\r\n//   const pos1 = xScale(index1);\r\n//   const pos2 = xScale(index2);\r\n\r\n//   console.log(pos1,pos2);\r\n\r\n//   // Animate moving the rectangles\r\n//   await new Promise((resolve) => {\r\n//     // d3.select(visuRef.current)\r\n//     //   .select(`rect:nth-child(${index1 + 1})`)\r\n//     //   .transition()\r\n//     //   .duration(200) // Adjust duration as needed\r\n//     //   .attr(\"transform\", `translate(${pos2},0)`)\r\n//     //   .on(\"end\", () => {\r\n//     //     d3.select(visuRef.current)\r\n//     //       .select(`rect:nth-child(${index2 + 1})`)\r\n//     //       .transition()\r\n//     //       .duration(200)\r\n//     //       .attr(\"transform\", `translate(${pos1},0)`)\r\n//     //       .on(\"end\", resolve);\r\n//     // });\r\n\r\n//     // d3.select(visuRef.current)\r\n//     //   .select(`text:nth-child(${index1 + 1})`)\r\n//     //   .transition()\r\n//     //   .duration(200) // Adjust duration as needed\r\n//     //   .attr(\"transform\", `translate(${pos2},0)`)\r\n//     //   .on(\"end\", () => {\r\n//     //     d3.select(visuRef.current)\r\n//     //       .select(`text:nth-child(${index2 + 1})`)\r\n//     //       .transition()\r\n//     //       .duration(200)\r\n//     //       .attr(\"transform\", `translate(${pos1},0)`)\r\n//     //       .on(\"end\", resolve);\r\n//     // });\r\n\r\n//     const rects = d3.select(visuRef.current).selectAll(\"rect\");\r\n//     const texts = d3.select(visuRef.current).selectAll(\"text\");\r\n\r\n//     console.log(texts);\r\n\r\n//     // Animate the first rectangle to the second position\r\n//     rects.filter((d, i) => i === index1)\r\n//       .transition()\r\n//       .duration(200) // Adjust duration as needed\r\n//       .attr(\"transform\", `translate(${pos2},0)`)\r\n//       .on(\"end\", () => {\r\n//         // Animate the second rectangle to the first position\r\n//         rects.filter((d, i) => i === index2)\r\n//           .transition()\r\n//           .duration(200)\r\n//           .attr(\"transform\", `translate(${pos1},0)`)\r\n//           .on(\"end\", resolve);\r\n//       });\r\n\r\n//     // Animate the text for the first index\r\n//     texts.filter((d, i) => i === index1)\r\n//     .transition()\r\n//     .duration(200) // Adjust duration as needed\r\n//     .attr(\"x\", pos2 + barWidth / 2)\r\n//     .on(\"end\", () => {\r\n//       // Animate the second label to the first position\r\n//       texts.filter((d, i) => i === index2)\r\n//         .transition()\r\n//         .duration(200)\r\n//         .attr(\"x\", pos1 + barWidth / 2)\r\n//         .on(\"end\", resolve);\r\n//     });\r\n\r\n//   });\r\n\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  const [grid, setGrid] = useState(initialGrid());\r\n  const { visualize, clearBoard, resetForVisualization, resetForMaze } =\r\n    useVisualization(grid, setGrid);\r\n\r\n  const {\r\n    randomizeBoard,\r\n    generateWeightedMaze,\r\n    generateRecursiveDivisionMaze,\r\n  } = useMazeGenerator(grid, setGrid);\r\n\r\n  const [ispathfinderEnabled, setpathfinderEnabled] = useState(false);\r\n\r\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState(algorithms[0]); // Default to Dijkstra object\r\n\r\n  \r\n  const handleToolbarAction = (actionKey) => {\r\n    switch (actionKey) {\r\n      case \"clearBoard\":\r\n        clearBoard();\r\n        break;\r\n      case \"clearPath\":\r\n        resetForVisualization();\r\n        break;\r\n      case \"randomizeBoard\":\r\n        resetForMaze();\r\n        randomizeBoard(); // Assuming this generates a random maze\r\n        break;\r\n      case \"generateRecursiveDivisionMaze\":\r\n        resetForMaze();\r\n        generateRecursiveDivisionMaze();\r\n        break;\r\n      case \"generateWeightedMaze\":\r\n        resetForMaze();\r\n        generateWeightedMaze();\r\n        break;\r\n      case \"visualize\":\r\n        resetForVisualization();\r\n        startVisualization(selectedAlgorithm.actionKey);\r\n        break;\r\n      default:\r\n        if (actionKey.startsWith(\"algo-\")) {\r\n          const algorithmKey = actionKey.replace(\"algo-\", \"\");\r\n          const selected = algorithms.find(\r\n            (algo) => algo.actionKey === algorithmKey\r\n          );\r\n          if (selected) {\r\n            setSelectedAlgorithm(selected);\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  const startVisualization = () => {\r\n    const startNode = findStartNode(grid);\r\n    const finishNode = findFinishNode(grid);\r\n    const algorithmFunc = selectedAlgorithm.func;\r\n\r\n    if (!algorithmFunc) {\r\n      console.error(`Algorithm function not found.`);\r\n      return;\r\n    }\r\n\r\n    const result = executeAlgorithm(algorithmFunc, grid, startNode, finishNode);\r\n\r\n\r\n    if (\r\n      !result ||\r\n      !result.visitedNodesInOrder ||\r\n      !result.nodesInShortestPathOrder\r\n    ) {\r\n      console.error(\"Algorithm did not return expected result.\");\r\n      return; // Exit to avoid calling visualize with undefined values\r\n    }\r\n\r\n    visualize(result.visitedNodesInOrder, result.nodesInShortestPathOrder);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n\r\n      <Toolbar\r\n        onAction={handleToolbarAction}\r\n        selectedAlgorithm={selectedAlgorithm.label}\r\n        algorithmItems={algorithms.map((algo) => ({\r\n          label: algo.label,\r\n          actionKey: `algo-${algo.actionKey}`,\r\n        }))}\r\n        mazeItems={mazeOptions} // Pass the maze options here\r\n        ispathfinderEnabled={false}\r\n      />\r\n\r\n\r\n      <section className=\"inner-page pt-4\">\r\n\r\n\r\n        <div className=\"container-fluid px-0\">\r\n          <div className=\"\">\r\n\r\n\r\n            <span className=\"row mx-auto px-0 w-100\">\r\n              <span className=\"font-weight-bold\">\r\n                No. of comparisons: 0 \r\n              </span>\r\n              <span className=\"font-weight-bold\">\r\n                No. of swaps: 0\r\n              </span>\r\n            </span>\r\n\r\n            <div className=\"data-container px-1 mb-0 mt-0 w-100\">\r\n            </div>\r\n\r\n            <svg ref={visuRef}></svg>\r\n         \r\n          </div>\r\n\r\n\r\n          <div className=\"row mx-auto\">\r\n            <div className=\"col-sm-12 col-md-12 col-lg-6 px-0 mr-0\">\r\n              <div className=\"ide w-100\">\r\n                <div className=\"row ml-auto mr-auto 1\">\r\n                  <span>\r\n                    <span className=\"op\">while</span>(swapped)\r\n                  </span>\r\n                </div>\r\n                <div className=\"row ml-auto mr-auto mt-1 2\">\r\n                  <span>&emsp;&emsp;swapped = <span className=\"var\">false</span></span>\r\n                </div>\r\n                <div className=\"row ml-auto mr-auto mt-1 3\">\r\n                  <span>\r\n                    &emsp;&emsp;<span className=\"op\">for</span> x = 0 to length(list)-1\r\n                  </span>\r\n                </div>\r\n                <div className=\"row ml-auto mr-auto mt-1 4\">\r\n                  <span>\r\n                    &emsp;&emsp;&emsp;&emsp;<span className=\"op\">if</span> list[x] &gt; list[x+1]\r\n                  </span>\r\n                </div>\r\n                <div className=\"row ml-auto mr-auto mt-1 5\">\r\n                  <span>\r\n                    &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<span className=\"op\">swap</span>(list[x], list[x+1])\r\n                  </span>\r\n                </div>\r\n                <div className=\"row ml-auto mr-auto mt-1 6\">\r\n                  <span>\r\n                    &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;swapped = <span className=\"var\">true</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-12 col-md-12 col-lg-6 ml-0 px-0\">\r\n              <div className=\"ide w-100 pl-0\">\r\n                <div className=\"row ml-auto mr-auto\">\r\n                  <span className=\"comment\">SHORT EXPLANATION</span>\r\n                </div>\r\n                <div className=\"row ml-auto mr-auto mt-1\">\r\n                  <span className=\"comment\">------------------</span>\r\n                </div>\r\n                <div className=\"row ml-auto mr-auto mt-1\">\r\n                  <span className=\"comment\">\r\n                    1. Starting at index 0, compare the current element with the next element\r\n                  </span>\r\n                </div>\r\n                <div className=\"row ml-auto mr-auto mt-1\">\r\n                  <span className=\"comment\">\r\n                    - If the current element is greater than the next element, swap them\r\n                  </span>\r\n                </div>\r\n                <div className=\"row ml-auto mr-auto mt-1\">\r\n                  <span className=\"comment\">\r\n                    - If the current element is less than the next element, move to the next element\r\n                  </span>\r\n                </div>\r\n                <div className=\"row ml-auto mr-auto mt-1\">\r\n                  <span className=\"comment\">\r\n                    2. Repeat Step 1 until the list is sorted\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"scrollers\"> {/* Aligns content to the left */}\r\n            <div className=\"scrollers1\">\r\n              <label>Elements: {data.length}</label>\r\n              <Slider\r\n                min={5}\r\n                max={50}\r\n                step={1}\r\n                value={data.length}\r\n                onChange={(value) => newSet(value)}\r\n                handle={({ value }) => <div>{value}</div>} // Optional custom handle\r\n              />\r\n            </div>\r\n\r\n            <div className=\"scrollers1\">\r\n              <label>Speed: {delay} ms</label>\r\n              <Slider\r\n                min={10}\r\n                max={1000}\r\n                step={10}\r\n                value={delay}\r\n                onChange={(value) => setDelay(value)}\r\n                handle={({ value }) => <div>{value}</div>} // Optional custom handle\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"row mx-auto\">\r\n            <div className=\"col-sm-12 col-md-12 col-lg-6\">\r\n              <form>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-sm-3\">Data Generation</div>\r\n                  <div className=\"col-sm-9\">\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        id=\"own-data\"\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                      />\r\n                      <label className=\"form-check-label\" htmlFor=\"own-data\">\r\n                        Use own data\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"col-sm-12 col-md-12 col-lg-6\">\r\n              <form>\r\n                <div className=\"form-group row\">\r\n                  <label htmlFor=\"data-input\" className=\"col-sm-5 col-form-label\">\r\n                    Your data (max. 50 elements):\r\n                  </label>\r\n                  <div className=\"col-sm-7\">\r\n                    <input\r\n                      disabled={true}\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"data-input\"\r\n                      placeholder=\"10,42,34,55,...\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row mx-auto\">\r\n            <div className=\"col-4\"></div>\r\n            <div className=\"col-4\">\r\n              <button\r\n                id=\"sort-button\"\r\n                type=\"button\"\r\n                onClick={bubbleSort}\r\n                className=\"btn btn-danger red w-100\"\r\n              >\r\n                Sort\r\n              </button>\r\n            </div>\r\n            <div className=\"col-4\"></div>\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n      </section>\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BubbleSort;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}