{"ast":null,"code":"var _jsxFileName = \"D:\\\\PR'S\\\\pff\\\\pathfinding-visualizer\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport PathfindingVisualizer from \"./components/PathfindingVisualizer\";\nimport Description from \"./components/Description\"; // Ensure the path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(true); // Modal is open by default\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  // Function to update the window width state\n  const handleResize = () => {\n    setWindowWidth(window.innerWidth);\n  };\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  const shouldShowModal = windowWidth > 768 && isModalOpen;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [shouldShowModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(Description, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PathfindingVisualizer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TiJBmqrHgDM4zp55wHpX42eUblw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PathfindingVisualizer","Description","jsxDEV","_jsxDEV","App","_s","isModalOpen","setIsModalOpen","windowWidth","setWindowWidth","window","innerWidth","handleResize","addEventListener","removeEventListener","shouldShowModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/PR'S/pff/pathfinding-visualizer/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport PathfindingVisualizer from \"./components/PathfindingVisualizer\";\r\nimport Description from \"./components/Description\"; // Ensure the path is correct\r\n\r\nfunction App() {\r\n  const [isModalOpen, setIsModalOpen] = useState(true); // Modal is open by default\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n  // Function to update the window width state\r\n  const handleResize = () => {\r\n    setWindowWidth(window.innerWidth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const shouldShowModal = windowWidth > 768 && isModalOpen;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {shouldShowModal && (\r\n        <div className=\"modal\">\r\n          <Description />\r\n        </div>\r\n      )}\r\n      <PathfindingVisualizer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,qBAAqB,MAAM,oCAAoC;AACtE,OAAOC,WAAW,MAAM,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAACY,MAAM,CAACC,UAAU,CAAC;;EAEjE;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBH,cAAc,CAACC,MAAM,CAACC,UAAU,CAAC;EACnC,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACdW,MAAM,CAACG,gBAAgB,CAAC,QAAQ,EAAED,YAAY,CAAC;IAE/C,OAAO,MAAM;MACXF,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAEF,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,eAAe,GAAGP,WAAW,GAAG,GAAG,IAAIF,WAAW;EAExD,oBACEH,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,GACjBF,eAAe,iBACdZ,OAAA;MAAKa,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBd,OAAA,CAACF,WAAW;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CACN,eACDlB,OAAA,CAACH,qBAAqB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV;AAAChB,EAAA,CA7BQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}